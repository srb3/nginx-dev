name: testing workflow

on: [push]

jobs:
  get-publish-version:
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.get-publish-version.outputs.publish-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare SemVer
        id: prepare-semver
        run: |
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/tags" | jq -r '.[0].name')
          [  "$LATEST_VERSION" = "null" ] && LATEST_VERSION="0.0.0"
          echo ::set-output name=latest_version_out::$LATEST_VERSION
          echo "Latest version: $LATEST_VERSION"
          commit_message=$(echo ${{ github.event.head_commit.message }})
          echo "commit message is: $commit_message"
          echo $commit_message
          if [[ "${commit_message}" == *"major release"* ]]; then
            echo ::set-output name=semver_increment::"m"
          elif [[ "${commit_message}" == *"minor release"* ]]; then
            echo ::set-output name=semver_increment::"i"
          else
            echo ::set-output name=semver_increment::"p"
          fi
      - name: Increment SemVer
        id: semver
        uses: matt-FFFFFF/simple-semver@v0.1.0
        with:
          semver-input: ${{ steps.prepare-semver.outputs.latest_version_out }}
          increment: ${{ steps.prepare-semver.outputs.semver_increment }}
      - name: Get publish version
        id: get-publish-version
        run: echo "::set-output name=publish-version::${{ steps.semver.outputs.semver }}"
      - name: debug publish
        id: debug-publish-version
        run: |
          tag=$(echo ${{ steps.semver.outputs.semver }})"
          echo "TAG: $tag"

  out-test:
    name: test output
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: echo ${{ needs.get-publish-version.outputs.publish-version }}


  kube-test:
    name: setup env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.3.0
        with:
          minikube version: 'v1.18.1'
          kubernetes version: 'v1.20.2'
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Check kube conf 
        run: cat ~/.kube/config
      - name: Interact with the cluster
        run: kubectl get nodes
      - name: deployment
        run: kubectl apply -f deployment.yml 
      - name: wait
        run: sleep 30
      - name: check deployment
        run: kubectl describe deployment nginx-deployment
      - name: get all pods
        run: kubectl get pods -A
      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{needs.get-publish-version.outputs.publish-version}}",
              sha: context.sha
            })
